@page "/button"

@inject IJSRuntime Js;

<ComponentDemoPage Name="Buttons"
                   DesignUrl="https://m3.material.io/components/buttons/overview"
                   ComponentUrl="https://material-web.dev/components/button/"
                   ComponentSourcePath="button"
                   BlazorComponentSourcePath="MdButton.razor"
                   BlazorDemoSourceName="Button">
    <Description>
        Common buttons prompt most actions in a UI
    </Description>
    <ComponentDemo>
        <div class="row text-center">
            @foreach (var type in Enum.GetValues<MdButtonStype>())
            {
                <div class="col">
                    <MdButton @onclick="@(() => clickedType = type.ToString())"
                              Disabled="@(disabled)"
                              ButtonStyle="@(type)"
                              TrailingIcon="@(trailingIcon)"
                              Href="@(hasHref ? "https://example.com" : null)"
                              Target="@(hasHref && targetBlank ? "_blank" : "")">
                        @(type.ToString())

                        @if (!string.IsNullOrEmpty(icon))
                        {
                            <MdIcon slot="icon">@(icon)</MdIcon>
                        }
                    </MdButton>
                </div>
            }
        </div>

        @if (clickedType is null)
        {
            <p>You haven't clicked any button</p>
        }
        else
        {
            <p>You clicked: @(clickedType)</p>
        }

        <div>
            <MdButton @ref="refDemo" @onclick="PrintHtmlRefAsync">
                Print to Console (ElementReference demo)
            </MdButton>
        </div>
    </ComponentDemo>
    <Tweaks>
        <div>
            <label class="me-3">
                <MdCheckbox @bind-Checked="disabled" />
                Disabled
            </label>

            <label class="me-3">
                <MdCheckbox @bind-Checked="hasHref" />
                Has Href
            </label>

            <label class="me-3">
                <MdCheckbox @bind-Checked="targetBlank" Disabled="@(!hasHref)" />
                Set Target to <code>_blank</code>
            </label>
        </div>

        <div class="row align-items-center">
            <div class="col-auto">
                <label>
                    <MdCheckbox @bind-Checked="trailingIcon" />
                    Trailing Icon
                </label>
            </div>
            <div class="col">
                <MdTextField @bind-Value="icon"
                             Label="Icon"
                             class="w-100"
                             HasLeadingIcon="false">
                    <MdIcon slot="leading-icon">Emoticon</MdIcon>
                </MdTextField>
            </div>
        </div>
    </Tweaks>
</ComponentDemoPage>

@code {

    bool disabled;
    string? clickedType;
    string icon = "send";
    bool trailingIcon;

    bool hasHref;
    bool targetBlank;

    MdButton refDemo = null!;

    async Task PrintHtmlRefAsync()
    {
        await Js.InvokeVoidAsync("console.log", refDemo.ElementReference);       
    }

}