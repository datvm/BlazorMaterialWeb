@page "/switch"

<ComponentDemoPage Name="Switch"
                   DesignUrl="https://m3.material.io/components/switch/overview"
                   ComponentUrl="https://material-web.dev/components/switch/"
                   ComponentSourcePath="switch"
                   BlazorComponentSourcePath="MdSwitch.razor"
                   BlazorDemoSourceName="Switch">
    <Description>
        Switches toggle the state of an item on or off
    </Description>
    <ComponentDemo>
        <div class="row text-center mb-1">
            <div class="col">
                <MdSwitch @bind-Selected="isChecked[0]"
                          Required="required"
                          Disabled="disabled"
                          Icons="icons"
                          ShowOnlySelectedIcon="iconOnlyOnSelected" />

                <p>Checked: @(isChecked[0])</p>
            </div>
            <div class="col">
                <label class="d-inline-flex hstack gap-3">
                    <MdSwitch @ref="chk" @bind-Selected="isChecked[1]"
                              Required="required"
                              Disabled="disabled"
                              Icons="icons"
                              ShowOnlySelectedIcon="iconOnlyOnSelected" />
                    This one is wrapped inside a label
                </label>

                <p>Checked: @(isChecked[1]), Validated: @(validity?.ToString() ?? "Not yet")</p>
            </div>
        </div>
    </ComponentDemo>
    <Tweaks>
        <Stack>
            <LabeledSwitch @bind-Selected="disabled" Label="Disabled" />
            <LabeledSwitch @bind-Selected="required" Label="Required" />
        </Stack>

        <Stack>
            <LabeledSwitch @bind-Selected="icons" Label="Show icons" />

            <label>
                <MdCheckbox @bind-Checked="iconOnlyOnSelected" Disabled="@(!icons)" />
                Show icons only when selected
            </label>
        </Stack>

        <Stack>
            <MdButton @onclick="CheckValidityAsync">
                <MdIcon slot="@(MdButton.IconSlot)">done</MdIcon>
                Check Validity
            </MdButton>

            <MdButton @onclick="ReportValidityAsync">
                <MdIcon slot="@(MdButton.IconSlot)">checklist</MdIcon>
                Report Validity
            </MdButton>

            <MdButton @onclick="SetCustomValidityAsync">
                <MdIcon slot="@(MdButton.IconSlot)">verified</MdIcon>
                Set Custom Validity
            </MdButton>
        </Stack>
    </Tweaks>
</ComponentDemoPage>

@code {
    MdSwitch chk = null!;
    bool? validity;

    bool[] isChecked = new bool[2];
    bool disabled;
    bool required;
    bool icons;
    bool iconOnlyOnSelected;

    async Task CheckValidityAsync()
    {
        validity = await chk.CheckValidityAsync();
    }

    async Task ReportValidityAsync()
    {
        validity = await chk.ReportValidityAsync();
    }

    async Task SetCustomValidityAsync()
    {
        await chk.SetCustomValidityAsync(chk.Selected ? null : "You must agree!");
        validity = await chk.ReportValidityAsync();
    }
}