@page "/slider"

<ComponentDemoPage Name="Sliders"
                   DesignUrl="https://m3.material.io/components/sliders/overview"
                   ComponentUrl="https://material-web.dev/components/slider/"
                   ComponentSourcePath="slider"
                   BlazorComponentSourcePath="MdSlider.razor"
                   BlazorDemoSourceName="Slider">
    <Description>
        Sliders let users make selections from a range of values
    </Description>
    <ComponentDemo>
        <div class="row text-center">
            <div class="col">
                <p>
                    <MdSlider @bind-Value="value"
                              Labeled="labeled"
                              Step="step" Ticks="ticks" />
                </p>
                Value = @(value)
            </div>

            <div class="col">
                <p>
                    <MdSlider @bind-ValueStart="rangeStart" @bind-ValueEnd="rangeEnd"
                              Labeled="labeled" Range
                               Step="step" Value="0" />
                 </p>
                 Start = @(rangeStart), End = @(rangeEnd)
            </div>
        </div>


        <p class="mb-0">
            Use <code>@@bind-...:event</code> to <code>ValueInput</code>, <code>ValueStartInput</code> and <code>ValueEndInput</code>
            to have the slider update the value as the user drags the slider.
        </p>

        <div class="row">
            <div class="col">
                <p>
                    <MdSlider @bind-Value="value" @bind-Value:event="ValueInput"
                              Labeled="labeled"
                              Step="step" Ticks="ticks" />
                </p>
                Value = @(value)
            </div>

            <div class="col">
                <p>
                    <MdSlider @bind-ValueStart="rangeStart" @bind-ValueStart:event="ValueStartInput"
                    @bind-ValueEnd="rangeEnd" @bind-ValueEnd:event="ValueEndInput"
                              Labeled="labeled" Range
                               Step="step" Value="0" />
                 </p>
                 Start = @(rangeStart), End = @(rangeEnd)
            </div>
        </div>
    </ComponentDemo>
    <Tweaks>
        <label class="hstack gap-3">
            <MdSwitch @bind-Selected="labeled" />
            Labeled
        </label>

        <label class="hstack gap-3">
            <MdSwitch @bind-Selected="ticks" />
            Ticks
        </label>

        <label class="hstack gap-3">
            <MdSwitch @bind-Selected="step10" @bind-Selected:after="UpdateStep" />
            Step = 10 (Unchecked = 0.25)
        </label>
    </Tweaks>
</ComponentDemoPage>

@code {

    double value = 50.5;
    double rangeStart = 20.5;
    double rangeEnd = 70.5;
    double step = .25;

    bool labeled;
    bool ticks;
    bool step10;

    void UpdateStep()
    {
        step = step10 ? 10 : .25;
    }

}