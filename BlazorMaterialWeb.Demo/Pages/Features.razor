@page "/features"

@* This element is needed or else Blazor wouldn't remove it when navigating, leaving the content intact *@
<article>    
    <MarkdownBlock>
        # Blazor Specific Features

        This library performs a few changes in additions to the original Web Component library.
        Some are needed for the Blazor Components to work, some are for convenience.

        ## ElementReference

        All Blazor components render back to their Web Component counterparts. All of them has `ElementReference` property if you need a reference to them.
        See an example at [Buttons](/button):

        ```cshtml
        async Task PrintHtmlRefAsync()
        {
            await Js.InvokeVoidAsync("console.log", refDemo.ElementReference);
        }
        ```

        ## `ChildContent` and attributes splatting

        All Blazor components support `ChildContent` and attributes splatting so you can add arbitrary HTML attributes and content, usually to style them:

        ```cshtml
        &lt;MdButton style="--md-elevated-button-container-shape: 0">
            A rectangular button
        &lt;/MdButton>
        ```
    </MarkdownBlock>

    <div class="mb-3">
        <MdButton style="--md-elevated-button-container-shape: 0">
            A rectangular button
        </MdButton>
    </div>
    
    <MarkdownBlock>
        ## Event dispatching is intercepted

        This library modifies `EventTarget.prototype.dispatchEvent`.
        [Blazor cannot get any non-bubble event](https://github.com/dotnet/aspnetcore/issues/39831#issuecomment-1024304085)
        and most events from Material Web Components are non-bubble events (see [this issue](https://github.com/material-components/material-web/issues/4905)).

        Therefore, this library intercepts `dispatchEvent` and makes them bubble instead.
        Please create an issue if this causes any problem. The source code is at [`#overrideDispatch` method of BlazorMaterialWeb.lib.module.js](https://github.com/datvm/BlazorMaterialWeb/blob/master/BlazorMaterialWeb/wwwroot/BlazorMaterialWeb.lib.module.js).

        ## Components merging

        Some components are merged into a single component, for example [Buttons](/button).
        Instead of different component for different styles (`md-elevated-button`, `md-filled-button`, `md-filled-tonal-button`, `md-outlined-button`, `md-text-button`),
        there is a single `MdButton` component with `ButtonStyle` parameter.

        Currently these are the merged components: `MdButton`, `MdProgress`, `MdTextField`, `MdSelect`.
        The property name should be `(Component)Style`: `ButtonStyle`, `ProgressStyle`, `TextFieldStyle`, `SelectStyle`.

        _Fun fact_: before the first release, I used to name them `Style` because it's shorter but I had to change it because
        [Blazor parameters/attributes are case-insensitive](https://github.com/dotnet/aspnetcore/issues/32252) and you cannot set `style` attributes anymore.

        ## `MdChip` has a Blazor-specific event

        See [this issue](https://github.com/material-components/material-web/issues/4951).
        `md-...-chip` does not have any event to determine when a chip is selected.
        This library observes the Chips for event so you can do `@@bind-Selected`.
    </MarkdownBlock>
</article>
